{
  "swagger": "2.0",
  "tags": [
    {
      "name": "Facts",
      "description": "All known fake facts"
    },
    {
      "name": "Sources",
      "description": "All known fake sources"
    },
    {
      "name": "Moderators",
      "description": "All system moderators"
    },
    {
      "name": "Reports",
      "description": "All reports made"
    }
  ],
  "host": "localhost:8080",
  "basePath": "/API",
  "schemes": [
    "http"
  ],
  "paths": {
    "/Facts": {
      "get": {
        "tags": [
          "Facts"
        ],
        "summary": "Get all facts from the database",
        "description": "Get request to retrieve all facts from the database",
        "operationId": "",
        "produces": "application/json",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/GET Fact"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Facts"
        ],
        "summary": "Adds a new facts to the database",
        "description": "Post request to add a new fact to the database",
        "operationId": "",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": "application/json",
        "parameters": [
          {
            "name": "statement",
            "in": "formData",
            "description": "Fact that is to be added",
            "required": true,
            "type": "string"
          },
          {
            "name": "popularity",
            "in": "formData",
            "description": "Popularity rating",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/POST Fact"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Facts/{FactId}": {
      "get": {
        "tags": [
          "Facts"
        ],
        "summary": "Gets a specific fact, based off its ID, from the database",
        "description": "Get request to fetch a fact from the database",
        "operationId": "",
        "produces": "application/json",
        "parameters": [
          {
            "name": "FactId",
            "in": "path",
            "description": "ID of fact to be fetched",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GET Specific Fact"
            }
          },
          "400": {
            "description": "No database entry for provided ID"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Facts"
        ],
        "summary": "Removes a fact, based off of it's ID, from the database",
        "description": "Delete request to remove a fact from the database",
        "operationId": "",
        "produces": "application/json",
        "parameters": [
          {
            "name": "FactId",
            "in": "path",
            "description": "ID of source to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DELETE Specific Fact"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Sources": {
      "get": {
        "tags": [
          "Sources"
        ],
        "summary": "Get all known fake news sources from the database",
        "description": "Get request to retrieve all known fake news sources from the database",
        "operationId": "",
        "produces": "application/json",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/GET Source"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Sources"
        ],
        "summary": "Adds a new fake news source to the database",
        "description": "Post request to add a new fake news source to the database",
        "operationId": "",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": "application/json",
        "parameters": [
          {
            "name": "statement",
            "in": "formData",
            "description": "Fact that is to be added",
            "required": true,
            "type": "string"
          },
          {
            "name": "popularity",
            "in": "formData",
            "description": "Popularity rating",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/POST Source"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Sources/{SourceId}": {
      "get": {
        "tags": [
          "Sources"
        ],
        "summary": "Get a specific known fake news source from the database",
        "description": "Get request to retrieve a specific known fake news sources from the database",
        "operationId": "",
        "produces": "application/json",
        "parameters": [
          {
            "name": "SourceId",
            "in": "path",
            "description": "ID of source to be fetched",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/GET Specific Source"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/GET Specific Source 404"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Sources"
        ],
        "summary": "Removes a specific known fake news source, based off of it's ID, from the database",
        "description": "Delete request to remove a specific known fake news source from the database",
        "operationId": "",
        "produces": "application/json",
        "parameters": [
          {
            "name": "SourceId",
            "in": "path",
            "description": "ID of known fake news source to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DELETE Specific Source"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Sources"
        ],
        "summary": "Update a specific known fake news source",
        "description": "Put request to update a specific known fake news source",
        "operationId": "",
        "produces": "application/json",
        "parameters": [
          {
            "name": "SourceId",
            "in": "path",
            "description": "ID of source to be updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "New name for the known fake news source",
            "required": false,
            "type": "string"
          },
          {
            "name": "tld",
            "in": "formData",
            "description": "New website address for the known fake news source",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PUT Specific Source"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Moderators": {
      "get": {
        "tags": [
          "Moderators"
        ],
        "summary": "Get all system moderators from the database",
        "description": "Get request to retrieve system moderators from the database",
        "operationId": "",
        "produces": "application/json",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/GET Moderator"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Moderators"
        ],
        "summary": "Adds a new moderator to the database",
        "description": "Post request to add a new moderator to the database",
        "operationId": "",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": "application/json",
        "parameters": [
          {
            "name": "emailAddress",
            "in": "formData",
            "description": "Moderator's Email Address",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "Moderator's password",
            "required": true,
            "type": "string"
          },
          {
            "name": "fName",
            "in": "formData",
            "description": "Moderator's Firstname",
            "required": true,
            "type": "string"
          },
          {
            "name": "lName",
            "in": "formData",
            "description": "Moderator's Lastname",
            "required": true,
            "type": "string"
          },
          {
            "name": "phoneNumber",
            "in": "formData",
            "description": "Moderator's cell phone number",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/POST Moderator"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Moderators/{EmailAddress}": {
      "get": {
        "tags": [
          "Moderators"
        ],
        "summary": "Get a specific moderator source from the database",
        "description": "Get request to retrieve a specific moderator from the database",
        "operationId": "",
        "produces": "application/json",
        "parameters": [
          {
            "name": "EmailAddress",
            "in": "path",
            "description": "Email address of moderator",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/GET Specific Moderator"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/GET Specific Moderator 404"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Moderators"
        ],
        "summary": "Removes a specific moderator, based off of their email address, from the database",
        "description": "Delete request to remove a specific moderator from the database",
        "operationId": "",
        "produces": "application/json",
        "parameters": [
          {
            "name": "EmailAddress",
            "in": "path",
            "description": "Email address of moderator to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DELETE Specific Moderator"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Moderators"
        ],
        "summary": "Update moderators details",
        "description": "Put request to update a moderators details",
        "operationId": "",
        "produces": "application/json",
        "parameters": [
          {
            "name": "EmailAddress",
            "in": "path",
            "description": "Email Address of source to be updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "New password for the moderator",
            "required": false,
            "type": "string"
          },
          {
            "name": "fName",
            "in": "formData",
            "description": "Update the moderators firstname",
            "required": false,
            "type": "string"
          },
          {
            "name": "lName",
            "in": "formData",
            "description": "Update the moderators lastname",
            "required": false,
            "type": "string"
          },
          {
            "name": "phoneNumber",
            "in": "formData",
            "description": "Update the moderators phone number",
            "required": false,
            "type": "string"
          },
          {
            "name": "authenticationLevel",
            "in": "formData",
            "description": "Update the moderators authentication level",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PUT Specific Moderator"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get all reports made",
        "description": "Get request to retrieve all reports",
        "operationId": "",
        "produces": "application/json",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/GET Reports"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Adds a new report to the database",
        "description": "Post request to add a new report to the database",
        "operationId": "",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": "application/json",
        "parameters": [
          {
            "name": "type",
            "in": "formData",
            "description": "The type of report being made. 1 = Fact, 2 = Source",
            "required": true,
            "type": "integer"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "The body of the report",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/POST Reports"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/id/{id}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get a specific report made",
        "description": "Get request to retrieve a specific report from the database",
        "operationId": "",
        "produces": "application/json",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of report to be fetched",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/GET Specific Report ID"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Reports"
        ],
        "summary": "Removes a report, based off of it's ID, from the database",
        "description": "Delete request to remove a report from the database",
        "operationId": "",
        "produces": "application/json",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of report to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DELETE Specific Report ID"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Reports"
        ],
        "summary": "Update report",
        "description": "Put request to update a reports active status",
        "operationId": "",
        "produces": "application/json",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of report to be updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "bActive",
            "in": "formData",
            "description": "Update the reports active status",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PUT Specific Report ID"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/type/{type}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get a specific report made",
        "description": "Get request to retrieve a specific report from the database",
        "operationId": "",
        "produces": "application/json",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Type of reports to be fetched. 1 = Facts, 2 = Sources",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/GET Specific Report Type"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Reports"
        ],
        "summary": "Update moderators details",
        "description": "Put request to update a moderators details",
        "operationId": "",
        "produces": "application/json",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Type of reports to be updated. 1 = Facts, 2 = Sources",
            "required": true,
            "type": "integer"
          },
          {
            "name": "bActive",
            "in": "formData",
            "description": "Update the active status",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PUT Specific Report Type"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/Reports/active/{active}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get a specific report made",
        "description": "Get request to retrieve a specific report from the database",
        "operationId": "",
        "produces": "application/json",
        "parameters": [
          {
            "name": "active",
            "in": "path",
            "description": "Active status of report to be fetched",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/GET Specific Report Active"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Reports"
        ],
        "summary": "Removes a report, based off of it's active status, from the database",
        "description": "Delete request to remove a report from the database",
        "operationId": "",
        "produces": "application/json",
        "parameters": [
          {
            "name": "active",
            "in": "path",
            "description": "Active status of reports to be deleted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DELETE Specific Report Active"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Reports"
        ],
        "summary": "Update reports details",
        "description": "Put request to update a reports active status",
        "operationId": "",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": "application/json",
        "parameters": [
          {
            "name": "active",
            "in": "path",
            "description": "Active status of reports to be updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "bActive",
            "in": "formData",
            "description": "Update the reports active status",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PUT Specific Report Active"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "GET Fact": {
      "type": "object",
      "properties": {
        "statement": {
          "type": "string",
          "example": "There is no moon"
        },
        "popularity": {
          "type": "integer",
          "example": "100"
        },
        "_id": {
          "type": "string",
          "example": "5ee08d65b9bd0cd05ed2a352"
        },
        "request": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "example": "GET"
            },
            "url": {
              "type": "string",
              "example": "/facts/5ee08d65b9bd0cd05ed2a352"
            }
          }
        }
      }
    },
    "POST Fact": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Created fact successfully"
        },
        "createdFact": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "example": "5ee08d65b9bd0cd05ed2a352"
            },
            "statement": {
              "type": "string",
              "example": "There is no moon"
            },
            "popularity": {
              "type": "integer",
              "example": "100"
            },
            "request": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "POST"
                },
                "url": {
                  "type": "string",
                  "example": "/facts/5ee08d65b9bd0cd05ed2a352"
                }
              }
            }
          }
        }
      }
    },
    "GET Specific Fact": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "5ee08e846d1156d1aaa15a53"
        },
        "statement": {
          "type": "string",
          "example": "The earth is flat"
        },
        "popularity": {
          "type": "integer",
          "example": 100
        },
        "_v": {
          "type": "integer",
          "example": 0
        }
      }
    },
    "DELETE Specific Fact": {
      "type": "object",
      "properties": {
        "n": {
          "type": "integer",
          "example": 1
        },
        "opTime": {
          "type": "object",
          "properties": {
            "ts": {
              "type": "string",
              "example": "6847981318001655813"
            },
            "t": {
              "type": "integer",
              "example": 9
            }
          }
        },
        "electionId": {
          "type": "string",
          "example": "7fffffff0000000000000009"
        },
        "ok": {
          "type": "integer",
          "example": 1
        },
        "$clusterTime": {
          "type": "object",
          "properties": {
            "clusterTime": {
              "type": "string",
              "example": "6847981318001655813"
            },
            "signature": {
              "type": "object",
              "properties": {
                "hash": {
                  "type": "string",
                  "example": "eSazwwZUt1sfyEiijzLHwAvs36Y="
                },
                "keyId": {
                  "type": "string",
                  "example": "6835849740492472323"
                }
              }
            }
          }
        },
        "operationTime": {
          "type": "string",
          "example": "6847981318001655813"
        },
        "deletedCount": {
          "type": "integer",
          "example": 1
        }
      }
    },
    "GET Source": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "example": 10
        },
        "sources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Source"
          }
        }
      }
    },
    "POST Source": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Created source successfully"
        },
        "createdSource": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "example": "5ee186e05de6721c0ccbc14a"
            },
            "name": {
              "type": "string",
              "example": "Fox News"
            },
            "tld": {
              "type": "string",
              "example": "https://www.foxnews.com"
            },
            "rating": {
              "type": "integer",
              "example": 2
            },
            "request": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "POST"
                },
                "url": {
                  "type": "string",
                  "example": "/Sources/5ee186e05de6721c0ccbc14a"
                }
              }
            }
          }
        }
      }
    },
    "GET Specific Source 404": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "No database entry for provided ID"
        }
      }
    },
    "GET Specific Source": {
      "type": "object",
      "properties": {
        "doc": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "example": "5ee186e05de6721c0ccbc14a"
            },
            "name": {
              "type": "string",
              "example": "Fox News"
            },
            "tld": {
              "type": "string",
              "example": "https://www.foxnews.com"
            },
            "rating": {
              "type": "integer",
              "example": 20
            },
            "_v": {
              "type": "integer",
              "example": 0
            }
          }
        }
      }
    },
    "PUT Specific Source": {
      "type": "object",
      "properties": {
        "n": {
          "type": "integer",
          "example": 1
        },
        "nModified": {
          "type": "integer",
          "example": 1
        },
        "opTime": {
          "type": "object",
          "properties": {
            "ts": {
              "type": "string",
              "example": "6847981318001655813"
            },
            "t": {
              "type": "integer",
              "example": 9
            }
          }
        },
        "electionId": {
          "type": "string",
          "example": "7fffffff0000000000000009"
        },
        "ok": {
          "type": "integer",
          "example": 1
        },
        "$clusterTime": {
          "type": "object",
          "properties": {
            "clusterTime": {
              "type": "string",
              "example": "6847981318001655813"
            },
            "signature": {
              "type": "object",
              "properties": {
                "hash": {
                  "type": "string",
                  "example": "eSazwwZUt1sfyEiijzLHwAvs36Y="
                },
                "keyId": {
                  "type": "string",
                  "example": "6835849740492472323"
                }
              }
            }
          }
        },
        "operationTime": {
          "type": "string",
          "example": "6847981318001655813"
        }
      }
    },
    "DELETE Specific Source": {
      "type": "object",
      "properties": {
        "n": {
          "type": "integer",
          "example": 1
        },
        "opTime": {
          "type": "object",
          "properties": {
            "ts": {
              "type": "string",
              "example": "6847981318001655813"
            },
            "t": {
              "type": "integer",
              "example": 9
            }
          }
        },
        "electionId": {
          "type": "string",
          "example": "7fffffff0000000000000009"
        },
        "ok": {
          "type": "integer",
          "example": 1
        },
        "$clusterTime": {
          "type": "object",
          "properties": {
            "clusterTime": {
              "type": "string",
              "example": "6847981318001655813"
            },
            "signature": {
              "type": "object",
              "properties": {
                "hash": {
                  "type": "string",
                  "example": "eSazwwZUt1sfyEiijzLHwAvs36Y="
                },
                "keyId": {
                  "type": "string",
                  "example": "6835849740492472323"
                }
              }
            }
          }
        },
        "operationTime": {
          "type": "string",
          "example": "6847981318001655813"
        },
        "deletedCount": {
          "type": "integer",
          "example": 1
        }
      }
    },
    "GET Moderator": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "example": 1
        },
        "moderators": {
          "type": "array",
          "items": {
            "properties": {
              "_id": {
                "type": "string",
                "example": "5f091f148f6a9946bc8f60a1"
              },
              "Name": {
                "type": "string",
                "example": "Stuart Barclay"
              },
              "Email Address": {
                "type": "string",
                "example": "5bits@gmail.com"
              },
              "Authentication Level": {
                "type": "integer",
                "example": 1
              }
            }
          }
        }
      }
    },
    "POST Moderator": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Successfully added new moderator"
        },
        "Moderator Details": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "example": "5f0a2e72e4cb0f487064c4e0"
            },
            "emailAddress": {
              "type": "string",
              "example": "u15015069@tuks.co.za"
            },
            "fName": {
              "type": "string",
              "example": "Stuart"
            },
            "lName": {
              "type": "string",
              "example": "Barclay"
            },
            "phoneNumber": {
              "type": "string",
              "example": "0793580784"
            }
          }
        }
      }
    },
    "GET Specific Moderator": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "5f0a2e72e4cb0f487064c4e0"
        },
        "Name": {
          "type": "string",
          "example": "Stuart Barclay"
        },
        "Email Address": {
          "type": "string",
          "example": "u15015069@tuks.co.za"
        },
        "Authentication Level": {
          "type": "integer",
          "example": 1
        }
      }
    },
    "GET Specific Moderator 404": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "No database entry for provided user name"
        }
      }
    },
    "DELETE Specific Moderator": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Moderator deleted"
        }
      }
    },
    "PUT Specific Moderator": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Moderator Details Updated"
        }
      }
    },
    "GET Reports": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "example": 10
        },
        "reports": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "5f1622e15643f25f14fb6b31"
              },
              "type": {
                "type": "string",
                "example": "Fact"
              },
              "Report Data": {
                "type": "integer",
                "example": "This is a facts report"
              },
              "Date Captured": {
                "type": "Date",
                "example": "2020-07-20T23:01:08.926Z"
              }
            }
          }
        }
      }
    },
    "GET Specific Report ID": {
      "type": "object",
      "properties": {
        "Report": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "example": "5ee186e05de6721c0ccbc14a"
            },
            "type": {
              "type": "string",
              "example": "Fact"
            },
            "Report Data": {
              "type": "integer",
              "example": "This is a facts report"
            },
            "Date Captured": {
              "type": "Date",
              "example": "2020-07-20T23:01:08.926Z"
            }
          }
        }
      }
    },
    "GET Specific Report Type": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "example": 2
        },
        "reports": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "5ee186e05de6721c0ccbc14a"
              },
              "type": {
                "type": "string",
                "example": "Fact"
              },
              "Report Data": {
                "type": "integer",
                "example": "This is a facts report"
              },
              "Date Captured": {
                "type": "Date",
                "example": "2020-07-20T23:01:08.926Z"
              }
            }
          }
        }
      }
    },
    "GET Specific Report Active": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "example": 2
        },
        "reports": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "5ee186e05de6721c0ccbc14a"
              },
              "type": {
                "type": "string",
                "example": "Fact"
              },
              "Report Data": {
                "type": "integer",
                "example": "This is a facts report"
              },
              "Date Captured": {
                "type": "Date",
                "example": "2020-07-20T23:01:08.926Z"
              }
            }
          }
        }
      }
    },
    "PUT Specific Report ID": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Report Updated"
        },
        "result": {
          "type": "object",
          "properties": {
            "n": {
              "type": "integer",
              "example": 1
            },
            "nModified": {
              "type": "integer",
              "example": 1
            },
            "opTime": {
              "type": "object",
              "properties": {
                "ts": {
                  "type": "string",
                  "example": "6847981318001655813"
                },
                "t": {
                  "type": "integer",
                  "example": 9
                }
              }
            },
            "electionId": {
              "type": "string",
              "example": "7fffffff0000000000000009"
            },
            "ok": {
              "type": "integer",
              "example": 1
            },
            "$clusterTime": {
              "type": "object",
              "properties": {
                "clusterTime": {
                  "type": "string",
                  "example": "6847981318001655813"
                },
                "signature": {
                  "type": "object",
                  "properties": {
                    "hash": {
                      "type": "string",
                      "example": "eSazwwZUt1sfyEiijzLHwAvs36Y="
                    },
                    "keyId": {
                      "type": "string",
                      "example": "6835849740492472323"
                    }
                  }
                }
              }
            },
            "operationTime": {
              "type": "string",
              "example": "6847981318001655813"
            }
          }
        }
      }
    },
    "DELETE Specific Report ID": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Report deleted"
        },
        "result": {
          "type": "object",
          "properties": {
            "n": {
              "type": "integer",
              "example": 1
            },
            "opTime": {
              "type": "object",
              "properties": {
                "ts": {
                  "type": "string",
                  "example": "6847981318001655813"
                },
                "t": {
                  "type": "integer",
                  "example": 9
                }
              }
            },
            "electionId": {
              "type": "string",
              "example": "7fffffff0000000000000009"
            },
            "ok": {
              "type": "integer",
              "example": 1
            },
            "$clusterTime": {
              "type": "object",
              "properties": {
                "clusterTime": {
                  "type": "string",
                  "example": "6847981318001655813"
                },
                "signature": {
                  "type": "object",
                  "properties": {
                    "hash": {
                      "type": "string",
                      "example": "eSazwwZUt1sfyEiijzLHwAvs36Y="
                    },
                    "keyId": {
                      "type": "string",
                      "example": "6835849740492472323"
                    }
                  }
                }
              }
            },
            "operationTime": {
              "type": "string",
              "example": "6847981318001655813"
            },
            "deletedCount": {
              "type": "integer",
              "example": 1
            }
          }
        }
      }
    },
    "PUT Specific Report Active": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Report Updated"
        },
        "result": {
          "type": "object",
          "properties": {
            "n": {
              "type": "integer",
              "example": 1
            },
            "nModified": {
              "type": "integer",
              "example": 1
            },
            "opTime": {
              "type": "object",
              "properties": {
                "ts": {
                  "type": "string",
                  "example": "6847981318001655813"
                },
                "t": {
                  "type": "integer",
                  "example": 9
                }
              }
            },
            "electionId": {
              "type": "string",
              "example": "7fffffff0000000000000009"
            },
            "ok": {
              "type": "integer",
              "example": 1
            },
            "$clusterTime": {
              "type": "object",
              "properties": {
                "clusterTime": {
                  "type": "string",
                  "example": "6847981318001655813"
                },
                "signature": {
                  "type": "object",
                  "properties": {
                    "hash": {
                      "type": "string",
                      "example": "eSazwwZUt1sfyEiijzLHwAvs36Y="
                    },
                    "keyId": {
                      "type": "string",
                      "example": "6835849740492472323"
                    }
                  }
                }
              }
            },
            "operationTime": {
              "type": "string",
              "example": "6847981318001655813"
            }
          }
        }
      }
    },
    "DELETE Specific Report Active": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Report deleted"
        },
        "result": {
          "type": "object",
          "properties": {
            "n": {
              "type": "integer",
              "example": 1
            },
            "opTime": {
              "type": "object",
              "properties": {
                "ts": {
                  "type": "string",
                  "example": "6847981318001655813"
                },
                "t": {
                  "type": "integer",
                  "example": 9
                }
              }
            },
            "electionId": {
              "type": "string",
              "example": "7fffffff0000000000000009"
            },
            "ok": {
              "type": "integer",
              "example": 1
            },
            "$clusterTime": {
              "type": "object",
              "properties": {
                "clusterTime": {
                  "type": "string",
                  "example": "6847981318001655813"
                },
                "signature": {
                  "type": "object",
                  "properties": {
                    "hash": {
                      "type": "string",
                      "example": "eSazwwZUt1sfyEiijzLHwAvs36Y="
                    },
                    "keyId": {
                      "type": "string",
                      "example": "6835849740492472323"
                    }
                  }
                }
              }
            },
            "operationTime": {
              "type": "string",
              "example": "6847981318001655813"
            },
            "deletedCount": {
              "type": "integer",
              "example": 1
            }
          }
        }
      }
    },
    "PUT Specific Report Type": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Report Updated"
        },
        "result": {
          "type": "object",
          "properties": {
            "n": {
              "type": "integer",
              "example": 1
            },
            "nModified": {
              "type": "integer",
              "example": 1
            },
            "opTime": {
              "type": "object",
              "properties": {
                "ts": {
                  "type": "string",
                  "example": "6847981318001655813"
                },
                "t": {
                  "type": "integer",
                  "example": 9
                }
              }
            },
            "electionId": {
              "type": "string",
              "example": "7fffffff0000000000000009"
            },
            "ok": {
              "type": "integer",
              "example": 1
            },
            "$clusterTime": {
              "type": "object",
              "properties": {
                "clusterTime": {
                  "type": "string",
                  "example": "6847981318001655813"
                },
                "signature": {
                  "type": "object",
                  "properties": {
                    "hash": {
                      "type": "string",
                      "example": "eSazwwZUt1sfyEiijzLHwAvs36Y="
                    },
                    "keyId": {
                      "type": "string",
                      "example": "6835849740492472323"
                    }
                  }
                }
              }
            },
            "operationTime": {
              "type": "string",
              "example": "6847981318001655813"
            }
          }
        }
      }
    },
    "POST Reports": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Successfully added new report"
        },
        "Report Details": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "example": "5f162e4c1ad7363464fb0b2a"
            },
            "type": {
              "type": "string",
              "example": "Sources"
            },
            "Report Data": {
              "type": "integer",
              "example": "This is a facts report"
            },
            "Date Captured": {
              "type": "Date",
              "example": "2020-07-20T23:01:08.926Z"
            }
          }
        }
      }
    },
    "Source": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "CNN"
        },
        "tld": {
          "type": "string",
          "example": "https://edition.cnn.com/"
        },
        "_id": {
          "type": "string",
          "example": "5edf31165d617a2850632422"
        },
        "request": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "example": "GET"
            },
            "url": {
              "type": "string",
              "example": "/Sources/5edf31165d617a2850632422"
            }
          }
        }
      }
    }
  }
}