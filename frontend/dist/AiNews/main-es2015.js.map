{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/check.service.ts","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/find.service.ts","./src/app/input/input.component.ts","./src/app/input/input.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/report.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\nimport { NavComponent } from './nav/nav.component'\n\nconst routes: Routes = []\n\n@NgModule({\n\timports: [ RouterModule.forRoot(routes) ],\n\texports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'AiNews';\n}\n","<!-- header -->\n<app-header></app-header>\n\n<app-home></app-home>\n\n<router-outlet></router-outlet>\n\n<!-- footer -->\n<app-footer></app-footer>\n\n<!--<app-nav></app-nav>-->\n\n","import { BrowserModule } from '@angular/platform-browser'\nimport { NgModule } from '@angular/core'\n\nimport { AppRoutingModule } from './app-routing.module'\nimport { AppComponent } from './app.component'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { NavComponent } from './nav/nav.component'\nimport { LayoutModule } from '@angular/cdk/layout'\nimport { MatToolbarModule } from '@angular/material/toolbar'\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatSidenavModule } from '@angular/material/sidenav'\nimport { MatIconModule } from '@angular/material/icon'\nimport { MatListModule } from '@angular/material/list'\nimport { InputComponent } from './input/input.component'\nimport { MatFormFieldModule } from '@angular/material/form-field'\nimport { FormsModule } from '@angular/forms'\nimport { MatInputModule } from '@angular/material/input'\nimport { ReportService } from './report.service'\nimport { FindService } from './find.service'\nimport { CheckService } from './check.service'\nimport { MatCardModule } from '@angular/material/card'\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { HomeComponent } from './components/home/home.component'\n\n@NgModule({\n\tdeclarations: [ AppComponent, NavComponent, InputComponent, HeaderComponent, FooterComponent, HomeComponent ],\n\timports: [\n\t\tBrowserModule,\n\t\tAppRoutingModule,\n\t\tBrowserAnimationsModule,\n\t\tLayoutModule,\n\t\tMatToolbarModule,\n\t\tMatButtonModule,\n\t\tMatSidenavModule,\n\t\tMatIconModule,\n\t\tMatListModule,\n\t\tMatFormFieldModule,\n\t\tFormsModule,\n\t\tMatInputModule,\n\t\tHttpClientModule,\n\t\tMatCardModule\n\t],\n\tproviders: [ ReportService, FindService, CheckService, HttpClientModule ],\n\tbootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\nimport { Observable, throwError } from 'rxjs'\nimport { catchError, retry } from 'rxjs/operators'\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class CheckService {\n\tconstructor(private http: HttpClient) {}\n\n\tcheck(content) {\n\t\tlet body = {\n\t\t\ttype: 'source',\n\t\t\tcontent: content\n\t\t}\n\t\treturn this.http.get<any>('http://localhost:8080/api/sources/' + content, { observe: 'response' })\n\t}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"footer\">\n    <div class=\"container\">\n    <div class=\"content has-text-centered\">\n      <p>\n        © 2020 by 5bits\n      </p>\n    </div>\n    </div>\n    </footer>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<nav class=\"navbar is-dark\">\n\n    <!-- logo -->\n    <div class=\"navbar-brand\">\n      <a class=\"navbar-item\">\n        <img src=\"assets/img/5bitslogo.png\"> AiNewsDetecctor\n      </a>\n    </div>\n  </nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"hero is-info is-fullheight is-bold\">\n    <div class=\"hero-body\">\n    <div class=\"container\">\n\n      <h1 class=\"title\">Home Page!</h1>\n\n    </div>\n    </div>\n</section>\n","import { Injectable } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\nimport { Observable, throwError } from 'rxjs'\nimport { catchError, retry } from 'rxjs/operators'\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class FindService {\n\tconstructor(private http: HttpClient) {}\n\n\tfind(content) {\n\t\tlet body = {\n\t\t\ttype: 'source',\n\t\t\tcontent: content\n\t\t}\n\t\treturn this.http.post('https://jsonplaceholder.typicode.com/posts', body)\n\t}\n}\n","import { Component, OnInit } from '@angular/core'\nimport { ReportService } from '../report.service'\nimport { FindService } from '../find.service'\nimport { CheckService } from '../check.service'\n\n@Component({\n\tselector: 'app-input',\n\ttemplateUrl: './input.component.html',\n\tstyleUrls: [ './input.component.css' ]\n})\nexport class InputComponent implements OnInit {\n\tvalue: string\n\tcheckFake: boolean\n\tcheckValid: boolean\n\treported: boolean\n\n\tconstructor(private rsv: ReportService, private fsv: FindService, private csv: CheckService) {\n\t\tthis.checkFake = false\n\t\tthis.checkValid = false\n\t\tthis.reported = false\n\t}\n\n\tclickCheck() {\n\t\tthis.csv.check(this.value).subscribe(\n\t\t\t//   response => {\n\t\t\t// \t// You can access status:\n\t\t\t// \tconsole.log(response.status)\n\t\t\t// \tif (response.status == 200) {\n\t\t\t// \t\tconsole.log('not fake')\n\t\t\t// \t} else {\n\t\t\t// \t\tconsole.log('fake')\n\t\t\t// \t\twindow.alert('fake news')\n\t\t\t// \t}\n\t\t\t// }\n\n\t\t\tres => (this.checkValid = true),\n\t\t\terr => (this.checkFake = true),\n\t\t\t() => console.log('HTTP request completed.')\n\t\t)\n\t}\n\tclickReport() {\n\t\t// // this.rsv.report(this.value).subscribe(data => {\n\t\t// // \tconsole.log(data)\n\t\t// })\n\t\tthis.reported = true\n\t}\n\tclickFind() {\n\t\tthis.fsv.find(this.value).subscribe(data => {\n\t\t\tconsole.log(data)\n\t\t})\n\t}\n\tngOnInit(): void {}\n}\n","<mat-form-field class=\"example-form-field\">\n  <mat-label>Source/URL</mat-label>\n  <input matInput type=\"text\" [(ngModel)]=\"value\">\n  <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\n    <mat-icon>close</mat-icon>\n  </button>\n</mat-form-field>\n\n  <div class=\"example-button-row\">\n    <button mat-raised-button (click)=\"clickCheck()\">Check</button>\n    <button mat-raised-button color=\"primary\" (click)=\"clickReport()\">Report</button>\n    <button mat-raised-button color=\"accent\" (click)=\"clickFind()\">Analytics</button>\n  </div>\n\n\n\n<mat-card class=\"example-card\" *ngIf=\"checkFake\">\n  <mat-card-header>\n    <div mat-card-avatar class=\"example-header-image\"></div>\n    <mat-card-title>Fake</mat-card-title>\n    <mat-card-subtitle>URL: {{value}}</mat-card-subtitle>\n  </mat-card-header>\n  <img mat-card-image src=\"https://cdn1.img.sputniknews.com/img/107843/75/1078437515_0:-1:1001:541_1000x541_80_0_0_ef6282ef090b0c653f13241eb33deb5b.jpg.webp\" alt=\"fake news\">\n  <mat-card-content>\n    <p>\n      The URL points to news that was determined to be fake by our engine.\n    </p>\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-button>Query</button>\n    <button mat-button (click)=\"checkFake=false\">Dismiss</button>\n  </mat-card-actions>\n</mat-card>\n\n<mat-card class=\"example-card\" *ngIf=\"checkValid\">\n  <mat-card-header>\n    <div mat-card-avatar class=\"example-header-image\"></div>\n    <mat-card-title>Valid</mat-card-title>\n    <mat-card-subtitle>URL: {{value}}</mat-card-subtitle>\n  </mat-card-header>\n  <img mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" alt=\"valid news\">\n  <mat-card-content>\n    <p>\n      The URL points to news that was determined to be valid by our engine.\n    </p>\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-button>Query</button>\n    <button mat-button (click)=\"checkValid=false\">Dismiss</button>\n  </mat-card-actions>\n</mat-card>\n\n<mat-card class=\"example-card\" *ngIf=\"reported\">\n  <mat-card-header>\n    <div mat-card-avatar class=\"example-header-image\"></div>\n    <mat-card-title>Source reported</mat-card-title>\n    <mat-card-subtitle>URL: {{value}}</mat-card-subtitle>\n  </mat-card-header>\n  <img mat-card-image src=\"https://memegenerator.net/img/instances/55571127/much-status-so-report-much-improve-wow.jpg\" alt=\"reported news\">\n  <mat-card-content>\n    <p>\n      The URL has been reported to contain fake news and is under review by our engine.\n    </p>\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-button (click)=\"reported=false\">Dismiss</button>\n  </mat-card-actions>\n</mat-card>\n","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [mode]=\"'over'\"\n      [opened]=\"false\">\n    <mat-toolbar>Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item href=\"\">Check</a>\n      <a mat-list-item href=\"\">Report</a>\n      <a mat-list-item href=\"\">Analytics</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        >\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>AiNewsDetectoor</span>\n    </mat-toolbar>\n    <!-- Add Content Here -->\n    <app-input></app-input>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Injectable } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\nimport { Observable, throwError } from 'rxjs'\nimport { catchError, retry } from 'rxjs/operators'\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ReportService {\n\tconstructor(private http: HttpClient) {}\n\n\treport(content) {\n\t\tlet body = {\n\t\t\ttype: 'source',\n\t\t\tcontent: content\n\t\t}\n\t\treturn this.http.post('https://jsonplaceholder.typicode.com/posts', body)\n\t}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}