{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/check.service.ts","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/find.service.ts","webpack:///src/app/input/input.component.ts","webpack:///src/app/input/input.component.html","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/app/report.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CheckService","http","content","body","type","get","observe","providedIn","FooterComponent","HeaderComponent","FindService","post","InputComponent","rsv","fsv","csv","checkFake","checkValid","reported","check","value","subscribe","res","err","console","log","find","data","clickCheck","clickReport","clickFind","NavComponent","breakpointObserver","isHandset$","Handset","pipe","result","matches","ReportService","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\nimport { NavComponent } from './nav/nav.component'\n\nconst routes: Routes = []\n\n@NgModule({\n\timports: [ RouterModule.forRoot(routes) ],\n\texports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'AiNews';\n}\n","<!-- header -->\n<app-header></app-header>\n\n<router-outlet></router-outlet>\n\n<!-- footer -->\n<app-footer></app-footer>\n\n<!--<app-nav></app-nav>-->\n\n","import { BrowserModule } from '@angular/platform-browser'\nimport { NgModule } from '@angular/core'\n\nimport { AppRoutingModule } from './app-routing.module'\nimport { AppComponent } from './app.component'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { NavComponent } from './nav/nav.component'\nimport { LayoutModule } from '@angular/cdk/layout'\nimport { MatToolbarModule } from '@angular/material/toolbar'\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatSidenavModule } from '@angular/material/sidenav'\nimport { MatIconModule } from '@angular/material/icon'\nimport { MatListModule } from '@angular/material/list'\nimport { InputComponent } from './input/input.component'\nimport { MatFormFieldModule } from '@angular/material/form-field'\nimport { FormsModule } from '@angular/forms'\nimport { MatInputModule } from '@angular/material/input'\nimport { ReportService } from './report.service'\nimport { FindService } from './find.service'\nimport { CheckService } from './check.service'\nimport { MatCardModule } from '@angular/material/card'\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component'\n\n@NgModule({\n\tdeclarations: [ AppComponent, NavComponent, InputComponent, HeaderComponent, FooterComponent ],\n\timports: [\n\t\tBrowserModule,\n\t\tAppRoutingModule,\n\t\tBrowserAnimationsModule,\n\t\tLayoutModule,\n\t\tMatToolbarModule,\n\t\tMatButtonModule,\n\t\tMatSidenavModule,\n\t\tMatIconModule,\n\t\tMatListModule,\n\t\tMatFormFieldModule,\n\t\tFormsModule,\n\t\tMatInputModule,\n\t\tHttpClientModule,\n\t\tMatCardModule\n\t],\n\tproviders: [ ReportService, FindService, CheckService, HttpClientModule ],\n\tbootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\nimport { Observable, throwError } from 'rxjs'\nimport { catchError, retry } from 'rxjs/operators'\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class CheckService {\n\tconstructor(private http: HttpClient) {}\n\n\tcheck(content) {\n\t\tlet body = {\n\t\t\ttype: 'source',\n\t\t\tcontent: content\n\t\t}\n\t\treturn this.http.get<any>('http://localhost:8080/api/sources/' + content, { observe: 'response' })\n\t}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"footer\">\n    <div class=\"container\">\n    <div class=\"content has-text-centered\">\n      <p>\n        © 2020 by 5bits\n      </p>\n    </div>\n    </div>\n    </footer>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar is-dark\">\n\n    <!-- logo -->\n    <div class=\"navbar-brand\">\n      <a class=\"navbar-item\">\n        <img src=\"assets/img/5bitslogo.png\">\n      </a>\n    </div>\n  </nav>\n","import { Injectable } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\nimport { Observable, throwError } from 'rxjs'\nimport { catchError, retry } from 'rxjs/operators'\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class FindService {\n\tconstructor(private http: HttpClient) {}\n\n\tfind(content) {\n\t\tlet body = {\n\t\t\ttype: 'source',\n\t\t\tcontent: content\n\t\t}\n\t\treturn this.http.post('https://jsonplaceholder.typicode.com/posts', body)\n\t}\n}\n","import { Component, OnInit } from '@angular/core'\nimport { ReportService } from '../report.service'\nimport { FindService } from '../find.service'\nimport { CheckService } from '../check.service'\n\n@Component({\n\tselector: 'app-input',\n\ttemplateUrl: './input.component.html',\n\tstyleUrls: [ './input.component.css' ]\n})\nexport class InputComponent implements OnInit {\n\tvalue: string\n\tcheckFake: boolean\n\tcheckValid: boolean\n\treported: boolean\n\n\tconstructor(private rsv: ReportService, private fsv: FindService, private csv: CheckService) {\n\t\tthis.checkFake = false\n\t\tthis.checkValid = false\n\t\tthis.reported = false\n\t}\n\n\tclickCheck() {\n\t\tthis.csv.check(this.value).subscribe(\n\t\t\t//   response => {\n\t\t\t// \t// You can access status:\n\t\t\t// \tconsole.log(response.status)\n\t\t\t// \tif (response.status == 200) {\n\t\t\t// \t\tconsole.log('not fake')\n\t\t\t// \t} else {\n\t\t\t// \t\tconsole.log('fake')\n\t\t\t// \t\twindow.alert('fake news')\n\t\t\t// \t}\n\t\t\t// }\n\n\t\t\tres => (this.checkValid = true),\n\t\t\terr => (this.checkFake = true),\n\t\t\t() => console.log('HTTP request completed.')\n\t\t)\n\t}\n\tclickReport() {\n\t\t// // this.rsv.report(this.value).subscribe(data => {\n\t\t// // \tconsole.log(data)\n\t\t// })\n\t\tthis.reported = true\n\t}\n\tclickFind() {\n\t\tthis.fsv.find(this.value).subscribe(data => {\n\t\t\tconsole.log(data)\n\t\t})\n\t}\n\tngOnInit(): void {}\n}\n","<mat-form-field class=\"example-form-field\">\n  <mat-label>Source/URL</mat-label>\n  <input matInput type=\"text\" [(ngModel)]=\"value\">\n  <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\n    <mat-icon>close</mat-icon>\n  </button>\n</mat-form-field>\n\n  <div class=\"example-button-row\">\n    <button mat-raised-button (click)=\"clickCheck()\">Check</button>\n    <button mat-raised-button color=\"primary\" (click)=\"clickReport()\">Report</button>\n    <button mat-raised-button color=\"accent\" (click)=\"clickFind()\">Analytics</button>\n  </div>\n\n\n\n<mat-card class=\"example-card\" *ngIf=\"checkFake\">\n  <mat-card-header>\n    <div mat-card-avatar class=\"example-header-image\"></div>\n    <mat-card-title>Fake</mat-card-title>\n    <mat-card-subtitle>URL: {{value}}</mat-card-subtitle>\n  </mat-card-header>\n  <img mat-card-image src=\"https://cdn1.img.sputniknews.com/img/107843/75/1078437515_0:-1:1001:541_1000x541_80_0_0_ef6282ef090b0c653f13241eb33deb5b.jpg.webp\" alt=\"fake news\">\n  <mat-card-content>\n    <p>\n      The URL points to news that was determined to be fake by our engine.\n    </p>\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-button>Query</button>\n    <button mat-button (click)=\"checkFake=false\">Dismiss</button>\n  </mat-card-actions>\n</mat-card>\n\n<mat-card class=\"example-card\" *ngIf=\"checkValid\">\n  <mat-card-header>\n    <div mat-card-avatar class=\"example-header-image\"></div>\n    <mat-card-title>Valid</mat-card-title>\n    <mat-card-subtitle>URL: {{value}}</mat-card-subtitle>\n  </mat-card-header>\n  <img mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" alt=\"valid news\">\n  <mat-card-content>\n    <p>\n      The URL points to news that was determined to be valid by our engine.\n    </p>\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-button>Query</button>\n    <button mat-button (click)=\"checkValid=false\">Dismiss</button>\n  </mat-card-actions>\n</mat-card>\n\n<mat-card class=\"example-card\" *ngIf=\"reported\">\n  <mat-card-header>\n    <div mat-card-avatar class=\"example-header-image\"></div>\n    <mat-card-title>Source reported</mat-card-title>\n    <mat-card-subtitle>URL: {{value}}</mat-card-subtitle>\n  </mat-card-header>\n  <img mat-card-image src=\"https://memegenerator.net/img/instances/55571127/much-status-so-report-much-improve-wow.jpg\" alt=\"reported news\">\n  <mat-card-content>\n    <p>\n      The URL has been reported to contain fake news and is under review by our engine.\n    </p>\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-button (click)=\"reported=false\">Dismiss</button>\n  </mat-card-actions>\n</mat-card>\n","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [mode]=\"'over'\"\n      [opened]=\"false\">\n    <mat-toolbar>Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item href=\"\">Check</a>\n      <a mat-list-item href=\"\">Report</a>\n      <a mat-list-item href=\"\">Analytics</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        >\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>AiNewsDetectoor</span>\n    </mat-toolbar>\n    <!-- Add Content Here -->\n    <app-input></app-input>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Injectable } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\nimport { Observable, throwError } from 'rxjs'\nimport { catchError, retry } from 'rxjs/operators'\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ReportService {\n\tconstructor(private http: HttpClient) {}\n\n\treport(content) {\n\t\tlet body = {\n\t\t\ttype: 'source',\n\t\t\tcontent: content\n\t\t}\n\t\treturn this.http.post('https://jsonplaceholder.typicode.com/posts', body)\n\t}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}